<erl>
-define(SESSION_NAME, "chatssid").

out(Arg) ->
    % Session Handling
    C = (Arg#arg.headers)#headers.cookie,
    {SessionCookie, SetCookie} = case yaws_api:find_cookie_val(?SESSION_NAME, C) of
        [] ->
            create_session_cookie();
        Cookie ->
            case yaws_api:cookieval_to_opaque(Cookie) of
                {ok, OP} ->
                    Cookie,
                    {Cookie, undefined};
                {error, no_session} ->
                    create_session_cookie()
            end
    end,

    %% operation for request
    Method = (Arg#arg.req)#http_request.method,
    Response = handle_request(Method, Arg, SessionCookie),

    %% send response to client
    case SetCookie of
        undefined -> 
            %% session cookie is already set
            {html, "found cookie"};
        _Else -> 
            %% session cookie is newly set, so send SET-COOKIE header 
            [SetCookie, {html, "cookie may be created"}]
    end.

%% create session cookie
create_session_cookie() ->
    Cookie = yaws_api:new_cookie_session({}),
    CO = yaws_api:setcookie(?SESSION_NAME, Cookie, "/"),
    {Cookie, CO}.

%% request handler
handle_request('GET', Arg, SessionCookie) ->
    handle_get(Arg, SessionCookie);
handle_request('POST', Arg, SessionCookie) ->
    handle_post(Arg, SessionCookie).

%% handler of GET
handle_get(Arg, SessionCookie) ->
    ok.

%% handler of POST
handle_post(Arg, SessionCookie) ->
    Form = yaws_api:parse_post(Arg), %% {Key, Value} list of the items set by the browser
    Ret = process_form(Form, SessionCookie),
    Ret.

%% processor of form paramters
process_form([{"name", Name}| _Tail], SessionCookie) ->
    %% join to chat
    chat_server:join(SessionCookie, Name),
    "ok";
process_form([{"logout", _Value}| _Tail], SessionCookie) ->
    %% logout
    chat_server ! {logout, SessionCookie},
    "ok";
process_form([{"message", Message}| _Tail], SessionCookie) ->
    %% post message
    chat_server ! {post_message, SessionCookie, self(), Message},
    receive
        Status -> Status
    end;
process_form([{_Key, _Value}| Tail], SessionCookie) ->
    process_form(Tail, SessionCookie);
process_form([], _SessionCookie) ->
    %% no parameter matches
    "ng".
</erl>
